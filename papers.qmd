---
title: "{{< fa file >}} Papers"
echo: false
jupyter: python3
section-divs: false
keep-md: true
format:
  html:
    toc: true
    toc-depth: 3
    toc-title: Contents
    code-summary: "Show the code"
    # code-tools: 
    #   source: true
    #   toggle: false
execute:
  freeze: auto  # re-render only when source changes
---

<!-- collapsable bibtex is achieved thus:
https://getbootstrap.com/docs/5.1/components/collapse/ -->

<!-- code inspired by https://ddimmery.com/posts/quarto-website/ -->


<!-- {{< fa thumbs-up >}}  -->

```{python}
#| label: "software"
#| id: "software"
#| output: asis
import yaml
from IPython.display import display, Markdown, HTML


ticks3 = """```"""

# yaml_papers = yaml.safe_load(open("papers.yaml"))

def button(url, str, icon):
    icon_base = icon[:2]
    return f"""<a class="btn my-btn-style btn-sm rounded", href="{url}" target="_blank" rel="noopener noreferrer">
        <i class="{icon_base} {icon}" role='img' aria-label='{str}'></i>
        {str}
    </a>"""

def new_bib_button(name, content):
    return (f"""<button class="btn my-btn-style btn-sm rounded" type="button" data-bs-toggle="collapse" data-bs-target="#{name}" aria-expanded="false" aria-controls="{name}">
    <i class="bi bi-bookmarks-fill"></i> BIBTEX
    </button>
    """
    )

def print_paper(data):
    # in order to get a link to each paper with a hash (URI fragment)
    # each paper is actually written as a h6 header, modified so it looks good
    h6start = '###### '
    # this comes at the end of the paper, and gives a name for the URI fragment: #publication:author2024word
    h6end = ". {#" + f"publication:{data['handle']}" + "}"
    # font awesome icon that rotates
    paper_icon = '<i class="fa-regular fa-file svv"></i> '
    # journal in italics
    journal = ' *' + data["journal"] + '*, '
    # if doi data is available, give journal name a hyperlink to the paper
    if "doi" in data:
        journal = ' [*' + data["journal"] + '*](https://doi.org/' + data["doi"] + '){target="_blank"}, '
    # finally, show all these elemens
    display(Markdown(
        h6start +
        paper_icon +
        data["authors"] + '. ' + 
        data["title"] + '. ' + 
        journal +
        data["year"] + 
        h6end
        ))
    # add a bunch of buttons, depending on the availability of various elements
    # use "button" function from above for all of them,
    # except for bibtex which has its own function
    buttons = []
    if "pdf" in data:
        buttons.append(button(data['pdf'], "PDF", "bi-file-earmark-pdf-fill"))
    if "website" in data:
        buttons.append(button(data['website'], "PDF", "bi-file-earmark-pdf-fill"))
    if "github" in data:
        buttons.append(button(data['github'], "Github", "bi-github"))
    if "bib" in data:
        buttons.append(new_bib_button(data['handle'], data['bib']))
    # now show buttons
    display(HTML(" ".join(buttons)))
    # if bibtex button exists, put the second part of the "collapse" element
    # this is invisible and shows only upon Bibtex button click
    if "bib" in data:
        # this is how the invisible part begins
        display(HTML(f"""
            <div class="collapse" id="{data['handle']}">
            <div class="card card-body border-0">
        """))
        # that's the actual content: the data['bib'] content, 
        # with ```bib to give is the necessary highlights
        display(Markdown(ticks3 + 
            f"bib\n{data['bib']}\n" + 
            ticks3))
        # now close element
        display(HTML("""
            </div>
            </div>
            """
        ))
    # skip line to space out papers
    display(Markdown("\n"))
    # horizontal line
    display(HTML("<hr/>"))

# load all data from papers.yaml
yaml_data = yaml.safe_load(open("papers.yaml"))
```

<!-- ## Papers -->

```{python}
#| output: asis

display(Markdown("### 2024"))
display(HTML("</br>"))
display(Markdown("**The paper below is the one I talked about at AGU 2024. At the moment, it has not yet been processed by bioRxiv, but it should be online soon.**  "))
display(HTML("</br>"))
print_paper(yaml_data['feuer2024dry'][0])
print_paper(yaml_data['rez2024stem'][0])
print_paper(yaml_data['kramer2024climate'][0])
print_paper(yaml_data['goldberg2024effect'][0])
print_paper(yaml_data['mantova2024monitoring'][0])

display(Markdown("### 2023"))
display(HTML("</br>"))
print_paper(yaml_data['kramer2023review'][0])

display(Markdown("### 2022"))
display(HTML("</br>"))
print_paper(yaml_data['kramer2022effects'][0])
print_paper(yaml_data['kramer2022sustainability'][0])
print_paper(yaml_data['adeyemo2022salinity'][0])
print_paper(yaml_data['goldberg2022compaction'][0])

display(Markdown("### 2021"))
display(HTML("</br>"))
print_paper(yaml_data['zelnik2021high'][0])
print_paper(yaml_data['kramer2021hysteresis'][0])

display(Markdown("### 2020"))
display(HTML("</br>"))
print_paper(yaml_data['kramer2020soil'][0])
print_paper(yaml_data['chen2020impact'][0])
print_paper(yaml_data['kaner2020internal'][0])

display(Markdown("### 2016"))
display(HTML("</br>"))
print_paper(yaml_data['mau2016optimal'][0])

display(Markdown("### 2015"))
display(HTML("</br>"))
print_paper(yaml_data['porporato2015ecohydrological'][0])
print_paper(yaml_data['mau2015dynamical'][0])
print_paper(yaml_data['mau2015reversing'][0])

display(Markdown("### 2014"))
display(HTML("</br>"))
print_paper(yaml_data['mau2014multiplicative'][0])
print_paper(yaml_data['haim2014spatial'][0])

display(Markdown("### 2013"))
display(HTML("</br>"))
print_paper(yaml_data['mau2013competing'][0])

display(Markdown("### 2012"))
display(HTML("</br>"))
print_paper(yaml_data['mau2012spatial'][0])

display(Markdown("### 2009"))
display(HTML("</br>"))
print_paper(yaml_data['mau2009dual'][0])
```

## Theses

### PhD Thesis

<iframe width="560" height="315" src="https://www.youtube.com/embed/-82IhHkb1rc" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

```{python}
print_paper(yaml_data['mau2013phdthesis'][0])
```


### MSc Thesis

<iframe width="560" height="315" src="https://www.youtube.com/embed/aE8mYeUUTZY" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

```{python}
print_paper(yaml_data['mau2009mscthesis'][0])
```

<div class="alert alert-success">
  The most important thing about an equation is all the quantities that don’t appear in it; once we know what the essentials are, figuring out how they depend on each other is often the easier part.  
  <strong>— Pedro Domingos, The Master Algorithm</strong></div>
