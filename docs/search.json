[
  {
    "objectID": "papers.html",
    "href": "papers.html",
    "title": " Papers",
    "section": "",
    "text": "Isaac Kramer, Yuval Bayer, and Yair Mau. The Sustainability of Treated Wastewater Irrigation: The Impact of Hysteresis on Saturated Soil Hydraulic Conductivity. Water Resources Research, 2022.\n\n        \n        PDF\n     \n     BIBTEX\n    \n    \n\n            \n            \n        \n@article{kramer2022sustainability,\n    doi = {10.1029/2021WR031307},\n    url = {https://doi.org/10.1029/2021WR031307},\n    year = {2022},\n    author = {Isaac Kramer and Yuval Bayer and Yair Mau},\n    title = {The Sustainability of Treated Wastewater Irrigation: The Impact of Hysteresis on Saturated Soil Hydraulic Conductivity},\n    journal = {Water Resources Research},\n}\n\n            \n            \n            \n\n Taiwo Adeyemo, Isaac Kramer, Guy J. Levy, and Yair Mau. Salinity and sodicity can cause hysteresis in soil hydraulic conductivity. Geoderma, 2022.\n\n        \n        PDF\n     \n     BIBTEX\n    \n    \n\n            \n            \n        \n@article{adeyemo2022salinity,\n    doi = {10.1016/j.geoderma.2022.115765},\n    url = {https://doi.org/10.1016/j.geoderma.2022.115765},\n    year = {2022},\n    month = may,\n    publisher = {Elsevier {BV}},\n    volume = {413},\n    pages = {115765},\n    author = {Taiwo Adeyemo and Isaac Kramer and Guy J. Levy and Yair Mau},\n    title = {Salinity and sodicity can cause hysteresis in soil hydraulic conductivity},\n    journal = {Geoderma}\n}\n\n            \n            \n            \n\n Nurit Goldberg Yehuda, Shmuel Assouline, Yair Mau, and Uri Nachshon. Compaction effects on evaporation and salt precipitation in drying porous media. HESS, 2022.\n\n        \n        PDF\n     \n     BIBTEX\n    \n    \n\n            \n            \n        \n@article{goldberg2022compaction,\n    title={Compaction effects on evaporation and salt precipitation in drying porous media},\n    author={Goldberg-Yehuda, Nurit and Assouline, Shmuel and Mau, Yair and Nachshon, Uri},\n    journal={Hydrology and Earth System Sciences},\n    volume={26},\n    number={9},\n    pages={2499--2517},\n    year={2022},\n    publisher={Copernicus GmbH}\n}\n\n            \n            \n            \n\n2021\n\n Yuval R. Zelnik, Yair Mau, Moshe Shachak, and Ehud Meron. High-integrity human intervention in ecosystems: Tracking self-organization modes. PLOS Computational Biology, 2021.\n\n        \n        PDF\n     \n     BIBTEX\n    \n    \n\n            \n            \n        \n@article{zelnik2021high,\n      doi = {10.1371/journal.pcbi.1009427},\n      url = {https://doi.org/10.1371/journal.pcbi.1009427},\n      year = {2021},\n      author = {Yuval R. Zelnik and Yair Mau and Moshe Shachak and Ehud Meron},\n      title = {High-integrity human intervention in ecosystems: Tracking self-organization modes},\n      journal = {PLOS Computational Biology},\n      volume = {17},\n      number = {9},\n      pages = {e1009427}\n}\n\n            \n            \n            \n\n Isaac Kramer, Yuval Bayer, Taiwo Adeyemo, and Yair Mau. Hysteresis in soil hydraulic conductivity as driven by salinity and sodicity: a modeling framework. HESS, 2021.\n\n        \n        PDF\n     \n        \n        Github\n     \n     BIBTEX\n    \n    \n\n            \n            \n        \n@article{kramer2020hysteresis,\n      doi = {10.5194/hess-25-1993-2021},\n      url = {https://doi.org/10.5194/hess-25-1993-2021},\n      year = {2021},\n      author = {Isaac Kramer and Yuval Bayer and Taiwo Adeyemo and Yair Mau},\n      title = {Hysteresis in soil hydraulic conductivity as driven by salinity and sodicity: a modeling framework},\n      journal = {Hydrology and Earth System Sciences},\n      volume={25},\n      number={4},\n      pages={1993--2008}\n}\n\n            \n            \n            \n\n2020\n\n Isaac Kramer and Yair Mau. Soil degradation risks assessed by the SOTE model for salinity and sodicity. Water Resources Research, 2020.\n\n        \n        PDF\n     \n        \n        Github\n     \n     BIBTEX\n    \n    \n\n            \n            \n        \n@article{kramer2020soil,\n      doi = {10.1029/2020WR027456},\n      url = {https://doi.org/10.1029/2020WR027456},\n      year = {2020},\n      publisher = {Wiley},\n      volume = {56},\n      number = {10},\n      author = {Isaac Kramer and Yair Mau},\n      title = {Soil degradation risks assessed by the SOTE model for salinity and sodicity},\n      journal = {Water Resources Research}\n}\n\n            \n            \n            \n\n Xing Chen, Mukesh Kumar, Daniel de B. Richter, and Yair Mau. Impact of gully incision on hillslope hydrology. Hydrological Processes, 2020.\n\n        \n        PDF\n     \n     BIBTEX\n    \n    \n\n            \n            \n        \n@article{chen2020impact,\n  doi = {10.1002/hyp.13845},\n  url = {https://doi.org/10.1002/hyp.13845},\n  year = {2020},\n  publisher = {Wiley},\n  volume = {34},\n  number = {19},\n  pages = {3848--3866},\n  author = {Xing Chen and Mukesh Kumar and Daniel B. Richter and Yair Mau},\n  title = {Impact of gully incision on hillslope hydrology},\n  journal = {Hydrological Processes}\n}\n\n            \n            \n            \n\n Avigail Kaner, Yakir Preisler, José M. Grünzweig, and Yair Mau. Internal water storage buffering maintains plant function under drought as described by a general hydraulic model. bioRxiv, 2020.\n\n        \n        PDF\n     \n     BIBTEX\n    \n    \n\n            \n            \n        \n@article{kaner2020internal,\n  doi = {10.1101/2020.02.11.943563},\n  url = {https://doi.org/10.1101/2020.02.11.943563},\n  year = {2020},\n  publisher = {Cold Spring Harbor Laboratory},\n  volume = {},\n  number = {},\n  pages = {},\n  author = {Avigail Kaner and Yakir Preisler and Jos{\\'{e}} M Gr\\\"{u}nzweig and Yair Mau},\n  title = {Internal water storage buffering maintains plant function under drought as described by a general hydraulic model},\n  journal = {}\n}\n\n            \n            \n            \n\n2016\n\n Yair Mau and Amilcare Porporato. Optimal control solutions to sodic soil reclamation. Advances in Water Resources, 2016.\n\n        \n        PDF\n     \n     BIBTEX\n    \n    \n\n            \n            \n        \n@article{mau2016optimal,\n  doi = {10.1016/j.advwatres.2016.02.014},\n  year  = {2016},\n  publisher = {Elsevier {BV}},\n  volume = {91},\n  pages = {37--45},\n  author = {Yair Mau and Amilcare Porporato},\n  title = {Optimal control solutions to sodic soil reclamation},\n  journal = {Advances in Water Resources}\n}\n\n            \n            \n            \n\n2015\n\n Amilcare Porporato, Xue Feng, Stefano Manzoni, Yair Mau, Anthony J. Parolari, and Giulia Vico. Ecohydrological modeling in agroecosystems: Examples and challenges. Water Resources Research, 2015.\n\n        \n        PDF\n     \n     BIBTEX\n    \n    \n\n            \n            \n        \n@article{porporato2015ecohydrological,\n  doi = {10.1002/2015wr017289},\n  year  = {2015},\n  publisher = {Wiley-Blackwell},\n  author = {Amilcare Porporato and Xue Feng and Stefano Manzoni and Yair Mau and Anthony J. Parolari and Giulia Vico},\n  title = {Ecohydrological modeling in agroecosystems: Examples and challenges},\n  journal = {Water Resources Research},\n  volume = {51},\n  number = {7},\n  pages = {5081--5099}\n}\n\n            \n            \n            \n\n Yair Mau and Amilcare Porporato. A dynamical system approach to soil salinity and sodicity. Advances in Water Resources, 2015.\n\n        \n        PDF\n     \n     BIBTEX\n    \n    \n\n            \n            \n        \n@article{mau2015dynamical,\n  year  = {2015},\n  publisher = {Elsevier {BV}},\n  volume = {83},\n  pages = {68--76},\n  author = {Yair Mau and Amilcare Porporato},\n  title = {A dynamical system approach to soil salinity and sodicity},\n  journal = {Advances in Water Resources},\n  doi = {10.1016/j.advwatres.2015.05.010}\n}\n\n            \n            \n            \n\n Yair Mau, Lev Haim, and Ehud Meron. Reversing desertification as a spatial resonance problem. Physical Review E, 2015.\n\n        \n        PDF\n     \n     BIBTEX\n    \n    \n\n            \n            \n        \n@article{mau2015reversing,\n  title={Reversing desertification as a spatial resonance problem},\n  author={Yair Mau and Lev Haim and Ehud Meron},\n  journal={Physical Review E},\n  volume={91},\n  number={1},\n  pages={012903},\n  year={2015},\n  publisher={APS},\n  doi = {10.1103/physreve.91.012903},\n}\n\n            \n            \n            \n\n2014\n\n Yair Mau, Xue Feng, and Amilcare Porporato. Multiplicative jump processes and applications to leaching of salt and contaminants in the soil. Physical Review E, 2014.\n\n        \n        PDF\n     \n     BIBTEX\n    \n    \n\n            \n            \n        \n@article{mau2014multiplicative,\n  title={Multiplicative jump processes and applications to leaching of salt and contaminants in the soil},\n  author={Yair Mau and Xue Feng and Amilcare Porporato},\n  journal={Physical Review E},\n  volume={90},\n  number={5},\n  pages={052128},\n  year={2014},\n  publisher={APS},\n  doi = {10.1103/physreve.90.052128},\n}\n\n            \n            \n            \n\n Lev Haim, Yair Mau, and Ehud Meron. Spatial forcing of pattern-forming systems that lack inversion symmetry. Physical Review E, 2014.\n\n        \n        PDF\n     \n     BIBTEX\n    \n    \n\n            \n            \n        \n@article{haim2014spatial,\n  title={Spatial forcing of pattern-forming systems that lack inversion symmetry},\n  author={Lev Haim and Yair Mau and Ehud Meron},\n  journal={Physical Review E},\n  volume={90},\n  number={2},\n  pages={022904},\n  year={2014},\n  publisher={APS},\n  doi = {10.1103/physreve.90.022904},\n}\n\n            \n            \n            \n\n2013\n\n Yair Mau, Lev Haim, Aric Hagberg, and Ehud Meron. Competing resonances in spatially forced pattern-forming systems. Physical Review E, 2013.\n\n        \n        PDF\n     \n     BIBTEX\n    \n    \n\n            \n            \n        \n@article{mau2013competing,\n  title={Competing resonances in spatially forced pattern-forming systems},\n  author={Yair Mau and Lev Haim and Aric Hagberg and Ehud Meron},\n  journal={Physical Review E},\n  volume={88},\n  number={3},\n  pages={032917},\n  year={2013},\n  publisher={APS},\n  doi = {10.1103/physreve.88.032917},\n}\n\n            \n            \n            \n\n2012\n\n Yair Mau, Aric Hagberg, and Ehud Meron. Spatial periodic forcing can displace patterns it is intended to control. Physical Review Letters, 2012.\n\n        \n        PDF\n     \n     BIBTEX\n    \n    \n\n            \n            \n        \n@article{mau2012spatial,\n  title={Spatial periodic forcing can displace patterns it is intended to control},\n  author={Yair Mau and Aric Hagberg and Ehud Meron},\n  journal={Physical Review Letters},\n  volume={109},\n  number={3},\n  pages={034102},\n  year={2012},\n  publisher={APS},\n  doi = {10.1103/physrevlett.109.034102},\n}\n\n            \n            \n            \n\n2009\n\n Yair Mau, Aric Hagberg, and Ehud Meron. Dual-mode spiral vortices. Physical Review E, 2009.\n\n        \n        PDF\n     \n     BIBTEX\n    \n    \n\n            \n            \n        \n@article{mau2009dual,\n  title={Dual-mode spiral vortices},\n  author={Yair Mau and Aric Hagberg and Ehud Meron},\n  journal={Physical Review E},\n  volume={80},\n  number={6},\n  pages={065203},\n  year={2009},\n  publisher={APS},\n  doi = {10.1103/physreve.80.065203},\n} \n\n            \n            \n            \n\nTheses\nPhD Thesis\n\n\n\n\n Yair Mau. Pattern Formation in Spatially Forced Systems: Application to Vegetation Restoration. Advisor: Prof. Ehud Meron. PhD Thesis, Physics Department, Ben-Gurion University of the Neveg, Israel, 2013.\n\n\n\n        \n        PDF\n     \n     BIBTEX\n    \n    \n\n\n\n            \n            \n        \n\n\n@phdthesis{mau2013phdthesis,\n  title={Pattern Formation in Spatially Forced Systems: Application to Vegetation Restoration},\n  author={Yair Mau},\n  school={Physics Department, Ben-Gurion University of the Neveg, Israel},\n  year={2013},\n} \n\n\n\n            \n            \n            \n\n\n\n\n\n\n\n\nMSc Thesis\n\n\n\n\n Yair Mau. Localized Spatial Structures in Non-Equilibrium Systems. Advisor: Prof. Ehud Meron. MSc Thesis, Physics Department, Ben-Gurion University of the Neveg, Israel, 2009.\n\n\n\n        \n        PDF\n     \n     BIBTEX\n    \n    \n\n\n\n            \n            \n        \n\n\n@phdthesis{mau2009mscthesis,\n  title={Localized Spatial Structures in Non-Equilibrium Systems},\n  author={Yair Mau},\n  school={Physics Department, Ben-Gurion University of the Neveg, Israel},\n  year={2009},\n}"
  },
  {
    "objectID": "group.html",
    "href": "group.html",
    "title": " Group",
    "section": "",
    "text": "Yair Mau\nPrincipal Investigator\n\n“Problems worthy of attack prove their worth by fighting back.” Piet Hein\n\n\n\n\n\n\n\n\n\n\n\nIsaac Kramer\nPhD student\nsoil salinization, irreversible soil degradation processes, sustainable resource use\nwebsite\n\n\n\n\n\n\n\n\n\n\nNurit Goldberg\nPhD student\nsoil compaction, soil salinization\n\n\n\n\n\n\n\n\n\n\nLaura Rez\nMSc student\nplant water fluxes, heatwave impact on fruit trees\n\n\n\n\n\n\nFormer members\n\n\n\n\n\n\n\n\n\n\n\nYuval Bayer\n2020–2022, BSc Amirim project\n\n\n\n\n\n\n\n\n\nAvi Gross\n2018–2020, MSc student\n\n\n\n\n\n\n\n\n\n\n\n\nTaiwo Adeyemo\n2018–2020, MSc student\n\n\n\n\n\n\n\n\n\nAvigail Kaner\n2017–2021, Research Specialist"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Yair Mau",
    "section": "",
    "text": "Contact\n   yair.mau@mail.huji.ac.il\n   +972 8 948 9386\n   Rehovot Campus, Lubell building, office 19. Map here\nAbout\nI’m fascinated by the natural world. I started out studying Physics, and then decided to use mathematical tools to understand processes in the critical zone, especially those concerning fluxes of water and carbon in the soil-plant-atmosphere continuum, both in the natural and agricultural environments.\nI’m interested in understanding how the feedbacks between climate, human stressors, and ecosystems, create interesting environmental dynamics. The main topics I deal with include plant resilience and survival under drought, soil degradation, sustainable resource use. Go the to  Science page to learn more about some of my current projects, and check out the  Papers page for details on already published works.\nBesides the usual academic pages (Science, Papers, Group, Courses), I hid a lot of material in the  More page: tutorials (python, latex), quotes, recommendations, etc.\n\nPhilosophy of life: if you’re not having fun, you’re doing it wrong."
  },
  {
    "objectID": "more/index.html",
    "href": "more/index.html",
    "title": " More",
    "section": "",
    "text": "Quotes\n Science Communication"
  },
  {
    "objectID": "more/quotes.html",
    "href": "more/quotes.html",
    "title": " Quotes",
    "section": "",
    "text": "The scientist is not a person who gives the right answers, he’s one who asks the right questions.\nClaude Lévi-Strauss\nThe most exciting phrase to hear in science, the one that heralds new discoveries, is not ‘Eureka!’ (I found it!) but ‘That’s funny…’\nIsaac Asimov\nIn theory, there is no difference between theory and practice. But, in practice, there is.\nJan L. A. van de Snepscheut\nContrary to what Asimov says, the most exciting phrase in science, the one that heralds new discoveries, is not ‘Eureka!’ or ‘That’s funny…,’ it’s ‘Your research grant has been approved.’\nJohn Alejandro King\nA theory is something nobody believes, except the person who made it. An experiment is something everybody believes, except the person who made it.\nAttributed to Albert Einstein\nThe purpose of models is not to fit the data but to sharpen the questions.\nSamuel Karlin\nResearch is what I’m doing when I don’t know what I’m doing.\nWernher von Braun\nNothing is more practical than a good theory.\nKurt Lewin\nJust as there are odors that dogs can smell and we cannot, as well as sounds that dogs can hear and we cannot, so too there are wavelengths of light we cannot see and flavors we cannot taste. Why then, given our brains wired the way they are, does the remark, “Perhaps there are thoughts we cannot think,” surprise you?\nRichard Hamming\nAn expert is a person who has made all the mistakes that can be made in a very narrow field.\nNiels Bohr\nAn expert is one who knows more and more about less and less until he knows absolutely everything about nothing.\nNicholas Butler\nEssentially, all models are wrong, but some are useful.\nGeorge E. P. Box\nTheory is when you know everything but nothing works. Praxis is when everything works but no one knows why. In our lab, theory and praxis are combined: nothing works and no one know why.\nUnknown\nThe great tragedy of Science — the slaying of a beautiful hypothesis by an ugly fact.\nThomas Henry Huxley\nSo, in the face of overwhelming odds, I’m left with only one option, I’m gonna have to science the shit out of this.\nMark Watney\nThe fact that we live at the bottom of a deep gravity well, on the surface of a gas covered planet going around a nuclear fireball 90 million miles away and think this to be normal is obviously some indication of how skewed our perspective tends to be.\nDouglas Adams, The Salmon of Doubt: Hitchhiking the Galaxy One Last Time\nYou’d be amazed how much research you can get done when you have no life whatsoever.\nErnest Cline, Ready Player One\nWhen you have eliminated all which is impossible, then whatever remains, however improbable, must be the truth.\nSherlock Holmes\nWith four parameters I can fit an elephant, and with five I can make him wiggle his trunk.\nJohn von Neumann\nThe purpose of computing is insight, not numbers.\nRichard Hamming\nThe most important thing about an equation is all the quantities that don’t appear in it; once we know what the essentials are, figuring out how they depend on each other is often the easier part.\nPedro Domingos, The Master Algorithm\nThermodynamics is easy – I’ve learned it many times.\nHarvey S. Leff\nFar better an approximate answer to the right question, which is often vague, than an exact answer to the wrong question, which can always be made precise.\nJohn Tukey, The future of data analysis\nAn article about computational result is advertising, not scholarship. The actual scholarship is the full software environment, code and data, that produced the result.\nBuckheit and Donoho (1995)\n”Forty-two!” yelled Loonquawl. ”Is that all you’ve got to show for seven and a half million years’ work?”\n”I checked it very thoroughly,” said the computer, ”and that quite definitely is the answer. I think the problem, to be quite honest with you, is that you’ve never actually known what the question is.”\n”But it was the Great Question! The Ultimate Question of Life, the Universe and Everything!” howled Loonquawl.\n”Yes,” said Deep Thought with the air of one who suffers fools gladly, ”but what actually is it?”\nA slow stupefied silence crept over the men as they stared at the computer and then at each other.\n”Well, you know, it’s just Everything … Everything … ” offered Phouchg weakly.\n”Exactly!” said Deep Thought. ”So once you do know what the question actually is, you’ll know what the answer means.”\nDouglas Adams, The Hitchiker’s Guide to the Galaxy\nComputers are useless. They can only give you answers.\nPablo Picasso\nThe true and only goal of science is to reveal unity rather than mechanism.\nHenri Poincaré\nOne of the principal objects of theoretical research is to find the point of view from which the subject appears in the greatest simplicity.\nJosiah Willard Gibbs\nThe future is already here — it’s just not very evenly distributed.\nWilliam Gibson\nTrue science teaches, above all, to doubt and to be ignorant.\nMiguel de Unamuno\nIf you are the smartest person in the room, then you are in the wrong room. Unknown\nDividing one number by another is mere computation; knowing what to divide by what is mathematics.\nJordan Ellenberg, How Not to Be Wrong: The Power of Mathematical Thinking\nI’ve been in this argument a thousand times. Won them all and convinced nobody.\nAmos Tversky, on the hot hand fallacy\nMathematics is the extension of common sense by other means.\nJordan Ellenberg, How Not to Be Wrong: The Power of Mathematical Thinking\nIf I had more time, I would have written a shorter letter.\nBlaise Pascal\nI am going to give what I will call an elementary demonstration. But elementary does not mean easy to understand. Elementary means that very little is required to know ahead of time in order to understand it, except to have an infinite amount of intelligence. There may be a large number of steps that hard to follow, but to each does not require already knowing the calculus or Fourier transforms.\nRichard P. Feynman\nIn this section a mathematical model of the growing embryo will be described. This model will be a simplification and an idealization, and consequently a falsification. It is to be hoped that the features retained for discussion are those of greatest importance in the present state of knowledge.\nAlan Turing, The Chemical Basis of Morphogenesis\nProblems worthy of attack prove their worth by hitting back.\nPiet Hein\nArt is solving problems that cannot be formulated before they have been solved. The shaping of the question is part of the answer.\nPiet Hein\nPhysics is the simplest of all the sciences, and fundamental physics⁠⁠—the study of the basic pieces of reality at the deepest level⁠—is the simplest of all. Not “simple” in the sense that the homework problems are easy, but simple in the sense that Galileo’s trick of ignoring friction and air resistance makes our lives easier. The reason why physics classes seem so hard is not because physics is so hard—it’s because we understand so much of it that there’s a lot to learn, and that’s because it’s fundamentally pretty simple.\nSean Carroll, The Big Picture\nSimplicity is a great virtue but it requires hard work to achieve it and education to appreciate it. And to make matters worse: complexity sells better.\nEdsger W. Dijkstra\nThe fundamental role of a teacher is not to deliver information. It is guide the social process of learning. The job of a teacher is to inspire, to challenge, to excite their students to want to learn. Yes, they also do explain and demonstrate and show things, but fundamentally that is beside the point. The most important thing a teacher does is make every student feel like they are important, to make them feel accountable for doing the work of learning.\nDerek Alexander Muller, youtube\nWhat is the first business of one who practices philosophy? To get rid of self-conceit. For it is impossible for anyone to begin to learn that which he thinks he already knows.\nEpictetus\nConfusion is a feeling that precedes learning something. It means you should pay closer attention, not disengage.\nThe Stoic Emperor, twitter\nLet no one ignorant of geometry enter here.\nSaid to be engraved on the door of Plato’s Academy, the oldest recorded entrance requirement of a college\nWe don’t use heuristics just because they are fast and efficient. We use them because they are less precise and thus less vulnerable to be misled by noise. A good heuristic is to distrust whoever adds or requires unnecessary precision. Another good heuristic is to distrust whoever thinks that precision always correlates with correctness.\nLuca Dellanna, twitter\nThe comments aren’t there to explain the code to the programmers, the code is there to explain the comments to the computer.\nAndy Harris, How to begin thinking like a programmer"
  },
  {
    "objectID": "more/communication.html",
    "href": "more/communication.html",
    "title": " Science Communication",
    "section": "",
    "text": "A scientific talk is not a scientific paper, it is a completely different medium! Here are a few tips that I find useful.\nHow To Give a Talk\n[How To Give a Talk, by David L Stern.]\nExcerpt:\n\nPrinciple 1 - Don’t Put Words On Slides\nIt may not seem intuitive, but including words on slides has a bigger detrimental effect on the quality of a talk than any other issue I will address.\n\n\nThe slides in most science talks contain many words. This simple fact has many consequences, none positive. Most obviously, words on slides impel listeners to read the words on the slide. If you are talking while they are reading, then you generate cognitive dissonance that makes it difficult for the audience to understand either your spoken words or your written words. So, if you want your audience to read the words on a slide, then, presumably, you should shut up. But, I don’t recommend that. Instead, just cut all the words form your slides.\n\nThe David Attenborough Style of Scientific Presentation\n[The David Attenborough Style of Scientific Presentation.]\nExcerpt:\n\nGet into this mindset: your main job is to be an entertainer, not a scientist. Most scientists don’t do this, which is why most scientific talks are bad. The fact of the matter is that if the audience doesn’t understand and enjoy your talk, they won’t care if your science is good.\n\nA LaTeX template\nCheck out a nice LaTeX template for presentations [here].\n\nVisualizations\nVisualizations can take a message very, very far. I put a lot of thinking into how to best express an idea. I believe that great graphs greatly improve a scientific paper, and a thoughful graph/animation surely brings home the main point of a talk. Here are a few thoughts on visualizations.\nInspiration\n\nHans Rosling, Gapminder\nMax Roser, Our World in Data\nStephen Malinowski, Music Animation Machine\nThe Economist, Daily Chart\n\nColors\nDon’t use the rainbow color map.\nWhy? [Read this], by Robert Kosara.\nSo how should you choose the colors for a graph?\n\nVisit colorbrewer. It gives sequential, diverging and qualitative colormaps that can be chosen to be “colorblind safe”, “print safe”, or “photocopy safe”. Usually, it is the first and only tool I use. It’s just great!\nVisit Adobe Color CC. It gives you much more freedom to play with the colors than colorbrewer. Use it wisely!\n\nMore on color: read Subtleties of Color, by Robert Simmon.\nBrowse for ideas\n\nThe Data Visualisation Catalogue"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "courses/index.html",
    "href": "courses/index.html",
    "title": " Courses",
    "section": "",
    "text": "Some text here. Evapotranspiration \\(ET\\) is\n\\[\n\\lambda = \\frac{\\sqrt{x^2-b+\\sin(\\theta)}}{1}\n\\]\nSome inline code like this. Now italics and even bold\nimport numpy as np\nfor i in range(5):\n    print(i**2)\na = np.random.random((10, 2))\n Agrotech Lab\n Time Series Analysis\n Physics 1"
  },
  {
    "objectID": "tutorials/python/histograms.html",
    "href": "tutorials/python/histograms.html",
    "title": "Yair Mau",
    "section": "",
    "text": "1d and 2d histograms\n\n\n\n\nThis code produces the figure above. I tried to showcase a few things one can do with 1d and 2d histograms.\n\n\n\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport matplotlib.gridspec as gridspec\nimport scipy.special\nfrom scipy.optimize import curve_fit\nimport seaborn as sns\nsns.set(style=\"ticks\", font_scale=1.5)\n\n\nfig = plt.figure(1, figsize=(8,6))  # figsize accepts only inches.\n\n##################################\n# Panels on the left of the figure\n##################################\n\ngs = gridspec.GridSpec(2, 2, width_ratios=[1, 0.2], height_ratios=[0.2, 1])\ngs.update(left=0.10, right=0.50, top=0.95, bottom=0.13,\n          hspace=0.02, wspace=0.02)\n\nsigma = 1.0  # standard deviation (spread)\nmu = 0.0  # mean (center) of the distribution\nx = np.random.normal(loc=mu, scale=sigma, size=5000)\nk = 2.0  # shape\ntheta = 1.0  # scale\ny = np.random.gamma(shape=k, scale=theta, size=5000)\n\n# bottom left panel\nax10 = plt.subplot(gs[1, 0])\ncounts, xedges, yedges, image = ax10.hist2d(x, y, bins=40, cmap=\"YlOrRd\",\n                                            density=True)\ndx = xedges[1] - xedges[0]\ndy = yedges[1] - yedges[0]\nxvec = xedges[:-1] + dx / 2\nyvec = yedges[:-1] + dy / 2\nax10.set_xlabel(r\"$x$\")\nax10.set_ylabel(r\"$y$\", rotation=\"horizontal\")\nax10.text(-2, 8, r\"$p(x,y)$\")\nax10.set_xlim([xedges.min(), xedges.max()])\nax10.set_ylim([yedges.min(), yedges.max()])\n\n# top left panel\nax00 = plt.subplot(gs[0, 0])\ngaussian = (1.0 / np.sqrt(2.0 * np.pi * sigma ** 2)) * \\\n    np.exp(-((xvec - mu) ** 2) / (2.0 * sigma ** 2))\nxdist = counts.sum(axis=1) * dy\nax00.bar(xvec, xdist, width=dx, fill=False,\n         edgecolor='black', alpha=0.8)\nax00.plot(xvec, gaussian, color='black')\nax00.set_xlim([xedges.min(), xedges.max()])\nax00.set_xticklabels([])\nax00.set_yticks([])\nax00.set_xlabel(\"Normal distribution\", fontsize=16)\nax00.xaxis.set_label_position(\"top\")\nax00.set_ylabel(r\"$p(x)$\", rotation=\"horizontal\", labelpad=20)\n\n# bottom right panel\nax11 = plt.subplot(gs[1, 1])\ngamma_dist = yvec ** (k - 1.0) * np.exp(-yvec / theta) / \\\n    (theta ** k * scipy.special.gamma(k))\nydist = counts.sum(axis=0) * dx\nax11.barh(yvec, ydist, height=dy, fill=False,\n          edgecolor='black', alpha=0.8)\nax11.plot(gamma_dist, yvec, color='black')\nax11.set_ylim([yedges.min(), yedges.max()])\nax11.set_xticks([])\nax11.set_yticklabels([])\nax11.set_ylabel(\"Gamma distribution\", fontsize=16)\nax11.yaxis.set_label_position(\"right\")\nax11.set_xlabel(r\"$p(y)$\")\nax11.xaxis.set_label_position(\"top\")\n\n###################################\n# Panels on the right of the figure\n###################################\n\ngs2 = gridspec.GridSpec(2, 1, width_ratios=[1], height_ratios=[1, 1])\ngs2.update(left=0.60, right=0.98, top=0.95, bottom=0.13,\n           hspace=0.02, wspace=0.05)\n\nx = np.random.normal(loc=0, scale=1, size=1000)\ny = np.random.gamma(shape=2, size=1000)\n\nbx10 = plt.subplot(gs2[1, 0])\nbx00 = plt.subplot(gs2[0, 0])\n\nN = 100\na = np.random.gamma(shape=5, size=N)\nmy_bins = np.arange(0,15,1.5)\nn1, bins1, patches1 = bx00.hist(a, bins=my_bins, density=True,\n                                histtype='stepfilled', alpha=0.2, hatch='/')\nbx00.set_xlim([0, 15])\nbx00.set_ylim([0, 0.28])\nbx00.set_xticklabels([])\nbx00.set_xlabel(\"plt.hist\", fontfamily=\"monospace\")\nbx00.xaxis.set_label_position(\"top\")\n\n# the following way is equivalent to plt.hist, but it gives\n# the user more flexibility when plotting and analysing the results\nn2, bins2 = np.histogram(a, bins=my_bins, density=True)\nwid = bins2[1] - bins2[0]\nred, = bx10.plot(bins2[:-1]+wid/2, n2, marker='o', color='red')\nbx10.bar(bins2[:-1], n2, width=wid, fill=False,\n         edgecolor='black', linewidth=3, alpha=0.8, align=\"edge\")\nbx10.set_xlim([0, 15])\nbx10.set_ylim([0, 0.28])\nbx10.set_xlabel(r\"np.histogram;  plt.bar\", fontfamily=\"monospace\")\n\n# best fit\n\nxdata = my_bins[:-1] + wid/2\nydata = n2\ndef func(x, p1, p2):\n    return x ** (p1 - 1.0) * np.exp(-x / p2) / (p2 ** p1 * scipy.special.gamma(p1))\npopt, pcov = curve_fit(func, xdata, ydata, p0=(1.5, 1.5))  # p0 = initial guess\np1, p2 = popt\nSStot = ((ydata - ydata.mean()) ** 2).sum()\nSSres = ((ydata - func(xdata, p1, p2)) ** 1).sum()\nRsquared = 1 - SSres / SStot\nh = np.linspace(0,15,101)\nbx00.plot(h, func(h, p1, p2), color='blue', linewidth=2)\n# dummy plot, just so we can have a legend on the bottom panel\nblue, = ax10.plot([100],[100], color='blue', linewidth=2, label=\"Best fit\")\nbx10.legend([red,blue],[r'Data',r'Best fit, $r^2=${:.2f}'.format(Rsquared)],\n            loc='upper right', frameon=False, handlelength=4,\n            markerfirst=False, numpoints=3, fontsize=14)\n\nfig.savefig(\"histograms.png\",dpi=300)"
  },
  {
    "objectID": "tutorials/python/leastsquares.html",
    "href": "tutorials/python/leastsquares.html",
    "title": "Yair Mau",
    "section": "",
    "text": "How to fit a nonlinear function to data\n\n\n\n\nThis code produces the figure above. It’s main tool is the curve_fit method, that allows us to fit any function to data, and get optimal parameter values.\n\n\n\n\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport matplotlib.gridspec as gridspec\nimport scipy.special\nfrom scipy.optimize import curve_fit\nimport matplotlib.patches as patches\nimport seaborn as sns\nsns.set(style=\"ticks\", font_scale=1.5)\n\nDefine some functions\n\nx = np.arange(0, 12, 0.4)\n\ndef func(x, par0, par1, par2):\n    return par0 + np.cos(par1 * x + par2)\n\n\ndef add_rec(ax, c, v, col):\n    ax.add_patch(\n        patches.Rectangle(\n            c,          # (x,y)\n            np.abs(v),  # width\n            v,          # height\n            alpha=0.4,\n            color=col\n        )\n    )\n\nNow let’s plot some stuff\n\n%matplotlib notebook\n\nfig, [ax1, ax2] = plt.subplots(2, 1, figsize=(8,6), sharex=True, sharey=True,\n                               subplot_kw={'aspect':'equal'}\n                              )\nfig.subplots_adjust(left=0.04, right=0.98, top=0.93, bottom=0.15,\n                    hspace=0.05, wspace=0.02)\nparams = {#'backend': 'ps',\n          'font.family': 'serif',\n          'font.serif': ['Computer Modern Roman'],\n          'ps.usedistiller': 'xpdf',\n          'text.usetex': True,\n          # include here any neede package for latex\n          'text.latex.preamble': [r'\\usepackage{amsmath}'],\n          }\n# the parameter values\npar = (1.3, 2, 1)\n# generating data with noise\ny = func(x, *par) + (np.random.random(len(x)) - 0.5)\nax1.plot(x, y, marker='o', ls='None', markerfacecolor=\"blue\", markeredgecolor=\"black\")\nax2.plot(x, y, marker='o', ls='None', markerfacecolor=\"red\", markeredgecolor=\"black\")\n\n# best fit\npopt, pcov = curve_fit(func, x, y, p0=(1.5, 1.5, 2.5))  # p0 = initial guess\np0, p1, p2 = popt\n# The total sum of squares (proportional to the variance of the data)\nSStot = ((y - y.mean()) ** 2).sum()\n# The sum of squares of residuals\nSSres = ((y - func(x, p0, p1, p2)) ** 2).sum()\nRsquared = 1 - SSres / SStot\n# plot best fit\nh = np.linspace(x.min(), x.max(), 1001)\nfit, = ax1.plot(h, func(h, p0, p1, p2), color='black', linewidth=2)\nax1.legend([fit], [\"Best fit\"], loc=\"upper right\",\n           frameon=False, handlelength=4)\n# plot mean\nmean, = ax2.plot(h, h * 0 + np.mean(y), ls='--', color='black', linewidth=2)\nax2.legend([mean], [\"Mean\"], loc=\"upper right\", frameon=False, handlelength=4)\n\n# plot blue and red squares\nfor ind in np.arange(len(x)):\n    x0 = x[ind]\n    y0 = y[ind]\n    # print(x0,y0)\n    v1 = y0 - func(x0, p0, p1, p2)\n    v2 = y0 - y.mean()\n    add_rec(ax1, (x0, y0), -v1, \"blue\")\n    add_rec(ax2, (x0, y0), -v2, \"red\")\n\nax2.text(0.5, 2.9, r\"Total sum of squares: {:.1f}\".format(SStot))\nax1.text(0.5, -0.8, r\"Sum of squares of residuals: {:.1f}\".format(SSres))\n# ax2.set_xlabel(\n#          r\"R-squared = $1 - \\frac{\\text{blue area}}{\\text{red area}}$ = \" +\n#          \"{:.2f}\".format(Rsquared))\nax2.set_xlabel(\n              r\"R-squared = $1 - \\frac{\\mathrm{blue\\ area}}{\\mathrm{red\\ area}}$\"\n              )\nax1.set_xlabel(\n               r\"Data: $f(x) = p_0 + \\cos(p_1 x + p_2)+ $ noise \",\n               labelpad=12\n               )\nax1.xaxis.set_label_position(\"top\")\n\nax1.set(xlim=[x.min(), x.max()],\n        ylim=[-1, 3.5],\n        xticklabels=[],\n        yticks=np.arange(-1, 4)\n       )\nax2.set(\n        xticklabels=np.arange(0,13,2)\n       )\n\nfig.savefig(\"least-squares.png\", dpi=300)\n\n\n\n\n\n\n\n/Users/yairmau/opt/anaconda3/lib/python3.7/site-packages/ipykernel_launcher.py:70: UserWarning: FixedFormatter should only be used together with FixedLocator"
  },
  {
    "objectID": "tutorials/python/streamplot.html",
    "href": "tutorials/python/streamplot.html",
    "title": "Yair Mau",
    "section": "",
    "text": "Streamplot of a two-dimensional linear system\n\n\ntoc: true\nbadges: true\ncomments: false\ncategories: [jupyter]\n\n\n\n\nStreamplot of a two-dimensional linear system, with eigenvectors and nullclines. Python shows LaTeX equations beautifully.\nMain features: meshgrid, streamplot, contour, legend, LaTeX\n\n\n\n\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport seaborn as sns\nsns.set(style=\"ticks\", font_scale=1.5)\n\nmake graph look pretty\n\n\n# learn how to configure:\n# http://matplotlib.sourceforge.net/users/customizing.html\nparams = {#'backend': 'ps',\n        #   'axes.labelsize': text_size,\n        #   'legend.fontsize': tick_size,\n        #   'legend.handlelength': 2.5,\n        #   'legend.borderaxespad': 0,\n        #   'xtick.labelsize': tick_size,\n        #   'ytick.labelsize': tick_size,\n        #   'font.family': 'serif',\n        #   'font.size': text_size,\n          # Times, Palatino, New Century Schoolbook,\n          # Bookman, Computer Modern Roman\n          # 'font.serif': ['Times'],\n        #   'ps.usedistiller': 'xpdf',\n          'text.usetex': True,\n        #   'figure.figsize': fig_size,\n          # include here any neede package for latex\n          'text.latex.preamble': [r'\\usepackage{amsmath}',\n                                  ],\n          }\nplt.rcParams.update(params)\n\ndefine parameters, system of equations, and equation for eigenvectors\n\n%matplotlib widget\nfig, ax = plt.subplots(figsize=(8,6))\n\n# parameters as a dictionary\n# p = {'a': -1.0, 'b': +0.2,\n#      'c': +1.2, 'd': -1.5}\n\n# # the equations\n# def system_equations(x,y):\n#     return [p['a'] * x + p['b'] * y,\n#             p['c'] * x + p['d'] * y,\n#            ]\n# eigenvectors\n# eigen_vec = 100 * np.array([            \n#                            [(p['a'] - p['d'] -\n#                             np.sqrt((p['a'] - p['d']) ** 2 +\n#                                     4.0 * p['b'] * p['c'])) /\n#                             (2.0 * p['c']), 1.0],\n#                            [(p['a'] - p['d'] +\n#                             np.sqrt((p['a'] - p['d']) ** 2 +\n#                                     4.0 * p['b'] * p['c'])) /\n#                             (2.0 * p['c']), 1.0],\n#                            ])\n\n# min_x, max_x = [-1, 1]\n# min_y, max_y = [-4, 4]\n# divJ = 50j\n# div = 50\n# 1st way\n# Y, X = np.mgrid[min_y:max_y:div,min_x:max_x:div]\n# 2nd way\n# X, Y = np.meshgrid(np.linspace(min_x, max_x, div),\n#                    np.linspace(min_y, max_y, div))\n\n# # streamplot\n# density = 2 * [0.80]\n# minlength = 0.2\n# arrow_color = 3 * [0.5]\n# ax.streamplot(X, Y, system_equations(X, Y)[0], system_equations(X, Y)[1],\n#               density=density, color=arrow_color, arrowsize=2,\n#               linewidth=2, minlength=minlength)\n\n\n# nullclines\n\n# null_0 = ax.contour(X, Y, system_equations(X, Y)[0],\n#                     levels=[0], colors='black', linewidths=3)\n# null_1 = ax.contour(X, Y,system_equations(X, Y)[1],\n#                     levels=[0], colors='blue', linewidths=3)\n# n0, = ax.plot([100,101], [100,101], color='black', linewidth=3)\n# n1, = ax.plot([100,101], [100,101], color='blue', linewidth=3)\n\n# fig.savefig(\"streamplot_test.png\", dpi=300)\n# plt.show()\n# fig\n\nRuntimeError: Failed to process string with tex because latex could not be found\n\n\nCanvas(toolbar=Toolbar(toolitems=[('Home', 'Reset original view', 'home', 'home'), ('Back', 'Back to previous view', 'arrow-left', 'back'), ('Forward', 'Forward to next view', 'arrow-right', 'forward'), ('Pan', 'Left button pans, Right button zooms\\nx/y fixes axis, CTRL fixes aspect', 'arrows', 'pan'), ('Zoom', 'Zoom to rectangle\\nx/y fixes axis', 'square-o', 'zoom'), ('Download', 'Download plot', 'floppy-o', 'save_figure')]))\n\n\n\n\n\n\n# n0 = null_0.collections[0]\n# n1 = null_1.collections[0]\n\n# eigenvectors\n\neigen_0, = ax.plot([eigen_vec[0, 0],-eigen_vec[0, 0]],\n                   [eigen_vec[0, 1],-eigen_vec[0, 1]],\n                   color='red', lw=2, ls=\"--\")\neigen_1, = ax.plot([eigen_vec[1, 0],-eigen_vec[1, 0]],\n                   [eigen_vec[1, 1],-eigen_vec[1, 1]],\n                   color='orange', lw=2, ls=\"--\")\ndash = (15, 10, 15, 10)\neigen_0.set_dashes(dash)\neigen_1.set_dashes(dash)\n\n# some labels, legend, and text\n\nax.set_ylabel(r\"$y$\", rotation='horizontal')\nax.set_xlabel(r\"$x$\", labelpad=5)\nax.legend([n0, n1, eigen_0, eigen_1],\n          [r'$dx/dt=0$', r'$dy/dt=0$',\n           \"eigenvector 1\", \"eigenvector 2\"],\n          loc=\"lower right\",\n          frameon=True, fancybox=False, shadow=False, ncol=2,\n          borderpad=0.5, labelspacing=0.5, handlelength=3, handletextpad=0.1,\n          borderaxespad=0.3, columnspacing=2)\n# ax.text(-1.0, 4.3, (r\"$\\frac{d}{dt}\\begin{pmatrix}x\\\\y\\end{pmatrix}=$\"\n#                     r\"$\\begin{pmatrix}a&b\\\\c&d\\end{pmatrix}\\cdot$\"\n#                     r\"$\\begin{pmatrix}x\\\\y\\end{pmatrix}$\"))\n# ax.text(-1.0, 4.3, r\"$\\frac{d}{dt}\\begin{pmatrix}x\\\\y\\end{pmatrix}$\")\n# ax.text(0.1, 5.0, r\"$a={:.1f}\\qquad b={:.1f}$\".format(p['a'], p['b']))\n# ax.text(0.1, 4.3, r\"$c={:.1f}\\qquad d={:.1f}$\".format(p['c'], p['d']))\nax.axis([min_x, max_x, min_y, max_y])\n# fig.savefig(\"streamplot.png\", dpi=300)\nplt.draw()\nfig\n\n\n\n\n\n\n\n\n\n\n\n\n\nthere are two equivalent ways to build a mesh, choose the one that makes more sense to you…\n\nimport os\nprint(os.environ['PATH'])\n\n/Users/yairmau/opt/anaconda3/bin:/Users/yairmau/.gem/ruby/3.0.0/bin:/usr/local/opt/ruby/bin:/Users/yairmau/.gem/ruby/2.6.0/bin:/Users/yairmau/opt/anaconda3/bin:/Users/yairmau/opt/anaconda3/condabin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/TeX/texbin:/Users/yairmau/go/bin"
  },
  {
    "objectID": "tutorials/python/subplotgrid.html",
    "href": "tutorials/python/subplotgrid.html",
    "title": "Yair Mau",
    "section": "",
    "text": "GridSpec is your friend\n\n\n\n\nWith GridSpec you can create any combination of panels\n\n\n\n\nimport numpy as np\nimport matplotlib\nimport matplotlib.pyplot as plt\nimport matplotlib.gridspec as gridspec\nfrom matplotlib.ticker import FuncFormatter\nimport seaborn as sns\nsns.set(style=\"ticks\", font_scale=1.5)\n\n\n# figsize accepts only inches.\nfig = plt.figure(1, figsize=(8, 6))\ngs = gridspec.GridSpec(3, 2, width_ratios=[1,0.5], height_ratios=[1,0.7,0.3])\ngs.update(left=0.16, right=0.86,top=0.88, bottom=0.13, hspace=0.05, wspace=0.05)\n\n###########\n# subplot a\n###########\nax0 = plt.subplot(gs[0, :])\n\nheaviside = lambda x: 0.5 * (np.sign(x) + 1)\nx = np.arange(0, 10.01, 0.01)\nax0.plot(x, heaviside(x - 2), color='purple', lw=3)\nax0.text(2.5, 1.1, r\"$\\longleftarrow$ heaviside\")\n\n# y ticks as a percentage\nax0.set_yticks(np.arange(-0.5, 2.0, 0.5))\ndef to_percent(y, position):\n    # Ignore the passed in position. This has the effect of scaling the default\n    # tick locations.\n    s = \"{:+.0f}\".format(y * 100)  # str(100 * y)\n    # The percent symbol needs escaping in latex\n    if matplotlib.rcParams['text.usetex'] is True:\n        return s + r'$\\%$'\n    else:\n        return s + '%'\n# Create the formatter using the function to_percent. This multiplies all the\n# default labels by 100, making them all percentages\nformatter = FuncFormatter(to_percent)\n# Set the formatter\nax0.yaxis.set_major_formatter(formatter)\nax0.set_ylabel(\"heaviside, percentage\")\n\n# x ticks on top\nax0.axis([x.min(), x.max(), -0.5, 1.5])\nax0.xaxis.tick_top()\nax0.set_xlabel(r\"x labels on top\")\nax0.xaxis.set_label_position(\"top\")\n\n# transAxes makes position relative to axes\nax0.text(0.97, 0.97, r\"a\", transform=ax0.transAxes,\n         horizontalalignment='right', verticalalignment='top',\n         fontweight=\"bold\")\n\n# copy window with same x axis (y will be different)\nax0b = ax0.twinx()\nax0b.plot(x, np.tanh(x - 5), color=\"green\", linewidth=3)\nax0b.axis([x.min(), x.max(), -1.1, 2.5])\nax0b.text(5.5, 0, r\"tanh $\\longrightarrow$\")\nax0b.set_ylabel(r'tanh, offset label')\nax0b.yaxis.set_label_coords(1.1, 0.70)\n\n###########\n# subplot b\n###########\nax10 = plt.subplot(gs[1, 0])\n\nx = np.arange(-5, 5, 0.01)\ny = np.exp(-x)\nax10.plot(x, y, color=\"orange\", lw=3)\nax10.set_yscale('log', base=2)\nax10.set_yticks(2.0 ** np.arange(-7, 7, 3))\nax10.text(1.0, 1, r\"$y=e^{-x}$\")\nax10.set_xticks(np.arange(-5, 6, 2))\nax10.set_xticklabels(np.arange(-5, 6, 2), y=0.15)\nax10.get_yaxis().set_tick_params(direction='out')\nax10.set_ylabel(\"log scale base 2\", labelpad=15)\nax10.text(0.97, 0.97, r\"b\", transform=ax10.transAxes,\n          horizontalalignment='right', verticalalignment='top',\n          fontweight=\"bold\")\n\n###########\n# subplot c\n###########\nax11 = plt.subplot(gs[1, 1])\n\nx = np.arange(1.0, np.e ** 4, 0.01)\ny = x ** (-0.8)\nax11.plot(x, y, color=\"cyan\", lw=3)\nax11.text(2, 1, r\"$y=x^{-0.8}$\")\nax11.loglog(x, y)\nax11.set_xscale(\"log\", base=np.e)\nax11.set_yscale(\"log\", base=np.e)\nxt = np.exp(np.arange(1, 4, 1))\nyt = np.pi ** (np.arange(-3, 2, 1))\nax11.set_xticks(xt)\nax11.set_xticklabels(xt, y=0.15)\nax11.set_yticks(yt)\n\n\ndef ticks_e(y, pos):   # base e\n    return r'$e^{:.0f}$'.format(np.log(y))\n\n\ndef ticks_pi(y, pos):  # base pi, why not?\n    return r'$\\pi^{%+.0f}$'%(np.log(y)/np.log(np.pi))\n\n\nax11.xaxis.set_major_formatter(FuncFormatter(ticks_e))\nax11.yaxis.set_major_formatter(FuncFormatter(ticks_pi))\nax11.yaxis.tick_right()\nax11.yaxis.set_label_position(\"right\")\nax11.set_ylabel(\"right side\", labelpad=10)\nax11.text(0.97, 0.97, r\"c\", transform=ax11.transAxes,\n          horizontalalignment='right', verticalalignment='top',\n          fontweight=\"bold\")\n\n###########\n# subplot d\n###########\nax20 = plt.subplot(gs[2, 0])\n\nax20.axis([0, 1, 0, 1])\nax20.set_xticks(np.arange(0, 1.1, 0.2))\nax20.set_xticklabels([\"January\", \"February\",\n                      \"March\", \"April\",\n                      \"May\", \"June\"],\n                      rotation=30, horizontalalignment=\"right\")\nax20.set_yticks([])\nax20.text(0.97, 0.97, r\"d\", transform=ax20.transAxes,\n          horizontalalignment='right', verticalalignment='top',\n          fontweight=\"bold\")\n\n###########\n# subplot e\n###########\nax21 = plt.subplot(gs[2, 1])\n\nax21.set_xticks([])\nax21.set_yticks([])\nax21.axis([0, 1, 0, 1])\nax21.text(0.97, 0.97, r\"e\", transform=ax21.transAxes,\n          horizontalalignment='right', verticalalignment='top',\n          fontweight=\"bold\")\n\nfig.savefig(\"subplot-grid.png\", dpi=300)\nfig"
  },
  {
    "objectID": "tutorials/python/index.html",
    "href": "tutorials/python/index.html",
    "title": " Python",
    "section": "",
    "text": "Most codes focus on plotting, but other algorithms such as numerical integration and Fourier transforms can also be found.\nSome useful links for learning python:\n\nPython Data Science Handbook\nLearn Python the Hard Way\nA Crash Course in Python for Scientists\nSoftware Carpentry\nFun with Lists\nPython | Codecademy\nScipy Lecture Notes\nA gallery of interesting IPython Notebooks\nThink Python: How to Think Like a Computer Scientist\n\nThe Python Graph Gallery\n\nThis might be overwhelming, so I suggest you to follow this:\n\n\nMy advice on learning Python:Don't set out to \"learn Python\". Choose a problem you're interested in and learn to solve it with Python.\n\n— Jake VanderPlas (@jakevdp) September 10, 2017\n\n\nStart by downloading Anaconda, a package manager application that will help you get started with python in all platforms.\nMake sure you are acquainted with ipython (interactive python, try it here), and with Jupyter notebook. ​\nI recommend Sublime Text for writing code, and you can install the Anaconda package to it to have a smooth IDE. [not the same anaconda as mentioned above! Yes, it’s confusing, I know.]\n\nFitzhugh-Nagumo — Labyrinthine Patterns\n\n\n\n\n        Jupyter notebook\n\n\n\nMain features: how to make a movie, time-integration methods (semi-spectral and Euler)\n\n\n\nConway’s Game of Life, acorn initial condition\n\n\n\n\n        Jupyter notebook\n\n\n\nThis is a (slightly) modified version of Glowing Python’s code. I make it available here because it features a few nice things:\n\nhow to make a movie using matplotlib.animation\nhow to write a generator (function with yield)\nhow to plot a sparce array (spy)\n\nMain features: matplotlib.animation, yield, with, matplotlib.pyplot.spy\n\n\n\nLeast squares fit of nonlinear function\n\n\n\n\n        Jupyter notebook\n\n\n\nMain features: LaTeX text, scipy.optimize.curve_fit, matplotlib.patches\n\n\nFun with histograms\n\n\n\n\n        Jupyter notebook\n\n\n\nMain features: np.histogram, plt.hist, plt.bar, plt.barh, gridspec, least squares fit of nonlinear function, plt.hist2d\n\n\nFancy subplot grid\n\n\n\n\n        Jupyter notebook\n\n\n\nHighly customizable subplot structure. Also, figure contains several axis configurations and labeling options.\nMain features: gridspec subplots; numpy-compatible heaviside; label, ticks and axis manipulations; log scale \n\nStreamplot\n\nJupyter notebook\n\nStreamplot of a two-dimensional linear system, with eigenvectors and nullclines. Python shows LaTeX equations beautifully.\nMain features: meshgrid, streamplot, contour, legend, LaTeX \n\nThe time dependent Ginzburg-Landau equation\n\nJupyter notebook\n\nNumerical integration of a parabolic partial differential equation, using finite differences: Euler step to advance time, and a 5-point stencil to approximate the Laplacian.\nMain features: imshow, colorbar, set_data\n\n\n\nThe double pendulum\n\nJupyter notebook\n\nNumerical integration of the equations of motion of the double pendulum. This time, scipy’s ode itegrator was used. Nice example of how to make a movie.\nMain features: scipy.integrate.ode, set_data, set_aspect('equal'), remove plot, movie\n\n\n\nThe Hilbert curve\n\nJupyter notebook\n\nConstruction of the Hilbert curve as a Lindenmayer system (L-system).\nMain features: string operations, movie\n\n\n\nA hysteresis mechanism\n\nJupyter notebook\n\nHysteresis mechanism created by the bistability of states. System goes to minimum points u in the energy functional \\(f=u^4-2u^2+hu\\). The parameter \\(h\\) is ramped down and up during this simulation.\nMain features: sympy analytical calculations, numpy dtypes, movie\n\n\n\n\n\nContour plot\n\nJupyter notebook\n\nContour plot with many customizable options. Also, a nice way to truncate a colormap so it gives the color range that you want.\nMain features: truncate_colormap, contour, contourf (fill), clabel (contour label)\n\n\n\n\nLeast action principle on the beach\n\nJupyter notebook\n\nHow should ​lifeguard run in order to save a drowning person in minimal time? Answer: by using Snell’s law of refraction!\nThis is a nice example how to use spines (x and y axis form a cross), instead of rectangular figures as usual. Also, “annotations” are used, where things can be labeled with the help of arrows.\nMain features: spines, matplotlib.patches.Rectangle, annotate\n\n\n\n\nThis website’s logo\n\nJupyter notebook\n\nSimple example of how to make a figure without any visible axes.\nMain features: set_axis_off, fill_between, matplotlib inline plot on Jupyter\n\n\n\n\nBars\n\nJupyter notebook\n\nHorizontal and vertical bars, with numeric legends. Unicode support.\nMain features: unicode, bar, barh, grid\n\nsome text here\n# random piece of code\nimport numpy as np\nfor i in range(5):\n    print(f\"{i**2:e}\")"
  },
  {
    "objectID": "tutorials/python/widgets/parabola.html",
    "href": "tutorials/python/widgets/parabola.html",
    "title": "Yair Mau",
    "section": "",
    "text": "def f(a,b,c):\n    x = np.linspace(-10,10,100)\n    y = a*x**2 + b*x + c\n    plt.plot(x,y)\n    plt.xlim([-10, 10])\n    plt.ylim([-10, 10])\n    plt.show()\n\n\ninteract(f, a=(-10,10,0.1), b=(-10,10,0.1), c=(-10,10,0.1))\n\n\n\n\n<function __main__.f(a, b, c)>\n\n\n\n# in Python, download CO2 concentration data from Mauna Loa, and plot the data.\n\n# In[1]:\n\n\n# Import the necessary packages\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\nimport datetime as dt\nimport urllib.request\nimport matplotlib.dates as mdates\n\n# In[2]:\n\n\n# Assign the url of the file to the variable url.\nurl = 'https://raw.githubusercontent.com/jrjohansson/scientific-python-lectures/master/stockholm_td_adj.dat'\n\n# Read the file into a DataFrame: df\ndf = pd.read_csv(url, sep='\\t', comment='#', parse_dates=True)\n\n# In[3]:\n\n\n# Print the head of the DataFrame df\nprint(df.head())\n\n# In[4]:\n\n\n# Plot the raw data as is\ndf.plot(figsize=(15, 5))\nplt.show()\n\n   1800  1  1    -6.1    -6.1    -6.1 1\n0  1800  1  2   -15.4   -15.4   -15.4 1\n1  1800  1  3   -15.0   -15.0   -15.0 1\n2  1800  1  4   -19.3   -19.3   -19.3 1\n3  1800  1  5   -16.8   -16.8   -16.8 1\n4  1800  1  6   -11.4   -11.4   -11.4 1\n\n\nTypeError: no numeric data to plot"
  }
]