{
  "hash": "4dd570adb5f4b6e16411019239b6462b",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"{{< fa brands python >}} Python\"\necho: false\njupyter: python3\nsection-divs: false\nexecute:\n  freeze: auto  # re-render only when source changes\n---\n\n\n\nPython is a great language for scientific computing, most of the programming done by our group is in python. We provide below some links for learning this language, and below we offer many python code examples. You are invited to download these codes, tweak with them, break them, hack them as you wish!\n\n\nMost codes focus on plotting, but other algorithms such as numerical integration and Fourier transforms can also be found. \n\nSome useful links for learning python:\n\n* <a href=\"http://nbviewer.jupyter.org/github/jakevdp/PythonDataScienceHandbook/blob/master/notebooks/Index.ipynb\" target=\"_blank\">Python Data Science Handbook</a>\n* <a href=\"https://learnpythonthehardway.org/book/\" target=\"_blank\">Learn Python the Hard Way</a>\n* <a href=\"http://nbviewer.jupyter.org/gist/rpmuller/5920182\" target=\"_blank\">A Crash Course in Python for Scientists</a>\n* <a href=\"http://swcarpentry.github.io/python-novice-inflammation/\" target=\"_blank\">Software Carpentry</a>\n* <a href=\"http://matthiaseisen.com/fwl/py/\" target=\"_blank\">Fun with Lists</a>\n* <a href=\"https://www.codecademy.com/learn/python\" target=\"_blank\">Python | Codecademy</a>\n* <a href=\"http://www.scipy-lectures.org/index.html\" target=\"_blank\">Scipy Lecture Notes</a>\n* <a href=\"https://github.com/ipython/ipython/wiki/A-gallery-of-interesting-IPython-Notebooks\" target=\"_blank\">A gallery of interesting IPython Notebooks</a>\n* <a href=\"http://greenteapress.com/thinkpython/html/index.html\" target=\"_blank\">Think Python: How to Think Like a Computer Scientist</a>  \n* <a href=\"https://python-graph-gallery.com/\" target=\"_blank\">The Python Graph Gallery</a>  \n\nThis might be overwhelming, so I suggest you to follow this:\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">My advice on learning Python:<br><br>Don&#39;t set out to &quot;learn Python&quot;. Choose a problem you&#39;re interested in and learn to solve it with Python.</p>&mdash; Jake VanderPlas (@jakevdp) <a href=\"https://twitter.com/jakevdp/status/906901174728536066?ref_src=twsrc%5Etfw\">September 10, 2017</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>   \n\nStart by downloading <a href=\"https://www.anaconda.com/distribution/\" target=\"_blank\">Anaconda</a>, a package manager application that will help you get started with python in all platforms.\n\n\nMake sure you are acquainted with ipython (interactive python, <a href=\"https://www.pythonanywhere.com/try-ipython/\" target=\"_blank\">try it here</a>), and with <a href=\"http://jupyter.org/\" target=\"_blank\">Jupyter notebook</a>.\n​\n\nI recommend <a href=\"https://www.sublimetext.com/\" target=\"_blank\">Sublime Text</a> for writing code, and you can install the Anaconda package to it to have a smooth IDE. [not the same anaconda as mentioned above! Yes, it's confusing, I know.]\n\n--------------------------------\n\n## Fitzhugh-Nagumo --- Labyrinthine Patterns\n\n::: {#f5af4ddf .cell execution_count=1}\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n<a class=\"btn btn-success btn-sm rounded\", href=\"https://yairmau.github.io/website/jupyter/2020/01/01/fhn.html\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Jupyter notebook\n</a>\n```\n:::\n:::\n\n\nMain features: \nhow to make a movie, time-integration methods (semi-spectral and Euler)\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/5au-G5FuI_A\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\n\n--------------------------------\n\n## Conway's Game of Life, acorn initial condition\n\n::: {#d8bb6177 .cell execution_count=2}\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n<a class=\"btn btn-success btn-sm rounded\", href=\"https://yairmau.github.io/website/jupyter/2020/01/01/gol.html\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Jupyter notebook\n</a>\n```\n:::\n:::\n\n\nThis is a (slightly) modified version of <a href=\"https://glowingpython.blogspot.co.il/2015/10/game-of-life-with-python.html\" target=\"_blank\">Glowing Python</a>'s code. I make it available here because it features a few nice things:\n\n* how to make a movie using matplotlib.animation\n* how to write a generator (function with yield)\n* how to plot a sparce array (spy)  \n\nMain features:\n`matplotlib.animation, yield, with, matplotlib.pyplot.spy`\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/lelsVltLZe4?rel=0\" frameborder=\"0\" allowfullscreen></iframe>\n\n--------------------------------\n\n## Least squares fit of nonlinear function\n\n::: {#0b3946ce .cell execution_count=3}\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n<a class=\"btn btn-success btn-sm rounded\", href=\"leastsquares.html\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Jupyter notebook\n</a>\n```\n:::\n:::\n\n\nMain features:\n`LaTeX text, scipy.optimize.curve_fit, matplotlib.patches`  \n![](least-squares.png)\n\n--------------------------------\n\n## Fun with histograms\n\n::: {#e97c04e8 .cell execution_count=4}\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n<a class=\"btn btn-success btn-sm rounded\", href=\"histograms.html\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Jupyter notebook\n</a>\n```\n:::\n:::\n\n\nMain features:\n`np.histogram, plt.hist, plt.bar, plt.barh, gridspec, least squares fit of nonlinear function, plt.hist2d`  \n![](histograms.png)\n\n--------------------------------\n\n## Fancy subplot grid\n\n::: {#770fb0a6 .cell execution_count=5}\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n<a class=\"btn btn-success btn-sm rounded\", href=\"subplotgrid.html\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Jupyter notebook\n</a>\n```\n:::\n:::\n\n\nHighly customizable subplot structure. Also, figure contains several axis configurations and labeling options.  \nMain features:\n`gridspec subplots; numpy-compatible heaviside; label, ticks and axis manipulations; log scale`\n![](subplot-grid.png)\n\n--------------------------------\n\n## Streamplot\n\n::: {#a92e9022 .cell execution_count=6}\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n<a class=\"btn btn-success btn-sm rounded\", href=\"streamplot.html\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Jupyter notebook\n</a>\n```\n:::\n:::\n\n\nStreamplot of a two-dimensional linear system, with eigenvectors and nullclines. Python shows LaTeX equations beautifully.  \nMain features:\n`meshgrid, streamplot, contour, legend, LaTeX`\n![](streamplot.png)\n\n--------------------------------\n\n## Palette\n\n::: {#5594a7d2 .cell execution_count=7}\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n<a class=\"btn btn-success btn-sm rounded\", href=\"palette.html\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Jupyter notebook\n</a>\n```\n:::\n:::\n\n\nGiven a named color, returns palettes with varying hue, lightness, and saturation.  \n![](palette-gold.png)\n\n--------------------------------\n\n## The time dependent Ginzburg-Landau equation\n\n<button class=\"my_button\" onclick=\"window.open('https://yairmau.github.io/website/jupyter/2020/01/01/tdgle.html', '_blank');\">Jupyter notebook</button>\n\nNumerical integration of a parabolic partial differential equation, using finite differences: Euler step to advance time, and a 5-point stencil to approximate the Laplacian.  \nMain features:\n`imshow, colorbar, set_data`\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/JgE9Px7zsQE\" frameborder=\"0\" allowfullscreen></iframe>\n\n--------------------------------\n\n## The double pendulum\n\n<button class=\"my_button\" onclick=\"window.open('https://yairmau.github.io/website/jupyter/2020/01/01/doublependulum.html', '_blank');\">Jupyter notebook</button>\n\nNumerical integration of the equations of motion of the double pendulum. This time, scipy's ode itegrator was used. Nice example of how to make a movie.  \nMain features:\n`scipy.integrate.ode, set_data, set_aspect('equal'), remove plot, movie`\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/-76LN_Kph7A\" frameborder=\"0\" allowfullscreen></iframe>\n\n--------------------------------\n\n## The Hilbert curve\n\n<button class=\"my_button\" onclick=\"window.open('https://yairmau.github.io/website/jupyter/2020/01/01/hilbertcurve.html', '_blank');\">Jupyter notebook</button>\n\nConstruction of the Hilbert curve as a Lindenmayer system (L-system).  \nMain features:\n`string operations, movie`\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/Oudyl56GPJU\" frameborder=\"0\" allowfullscreen></iframe>\n\n\n--------------------------------\n\n## A hysteresis mechanism\n\n<button class=\"my_button\" onclick=\"window.open('https://yairmau.github.io/website/jupyter/2020/01/01/hysteresis.html', '_blank');\">Jupyter notebook</button>\n\nHysteresis mechanism created by the bistability of states. System goes to minimum points u in the energy functional $f=u^4-2u^2+hu$. The parameter $h$ is ramped down and up during this simulation.  \nMain features:\n`sympy analytical calculations, numpy dtypes, movie`\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/xgRDhOifFow\" frameborder=\"0\" allowfullscreen></iframe>\n\n<hr class=\"my_hr\">\n\n<!-- ------------------------------------- -->\n<!-- ------------------------------------- -->\n\n## Contour plot\n\n::: {#b1b2910d .cell execution_count=8}\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n<a class=\"btn btn-success btn-sm rounded\", href=\"contour_plot.html\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Jupyter notebook\n</a>\n```\n:::\n:::\n\n\nContour plot with many customizable options. Also, a nice way to truncate a colormap so it gives the color range that you want.  \nMain features:\n`truncate_colormap, contour, contourf (fill), clabel (contour label)`\n\n![](contour_plot.png)\n\n<hr class=\"my_hr\">\n\n<!-- ------------------------------------- -->\n<!-- ------------------------------------- -->\n\n## Least action principle on the beach\n\n::: {#8327bca9 .cell execution_count=9}\n\n::: {.cell-output .cell-output-display}\n```{=html}\n\n<a class=\"btn btn-success btn-sm rounded\", href=\"best_path.html\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Jupyter notebook\n</a>\n```\n:::\n:::\n\n\nHow should ​lifeguard run in order to save a drowning person in minimal time? Answer: by using Snell's law of refraction!  \nThis is a nice example how to use spines (x and y axis form a cross), instead of rectangular figures as usual. Also, \"annotations\" are used, where things can be labeled with the help of arrows.  \nMain features:\n`spines, matplotlib.patches.Rectangle, annotate`\n\n![](best_path.png)\n\n\n<hr class=\"my_hr\">\n\n<!-- ------------------------------------- -->\n<!-- ------------------------------------- -->\n\n## This website's logo\n\n<button class=\"my_button\" onclick=\"window.open('https://yairmau.github.io/website/jupyter/2020/01/01/websitelogo.html', '_blank');\">Jupyter notebook</button>\n\nSimple example of how to make a figure without any visible axes.  \nMain features:\n`set_axis_off, fill_between, matplotlib inline plot on Jupyter`\n\n![](/images/python_figures/site-logo.png)\n\n<hr class=\"my_hr\">\n\n<!-- ------------------------------------- -->\n<!-- ------------------------------------- -->\n\n## Bars\n\n<button class=\"my_button\" onclick=\"window.open('https://yairmau.github.io/website/jupyter/2020/01/01/bars.html', '_blank');\">Jupyter notebook</button>\n\nHorizontal and vertical bars, with numeric legends. Unicode support.  \nMain features:\n`unicode, bar, barh, grid`\n\n![](/images/python_figures/bars.png)\n\n<div class=\"alert alert-success\">\n  “The comments aren’t there to explain the code to the programmers, the code is there to explain the comments to the computer.”  \n  <strong>—Andy Harris, How to begin thinking like a programmer</strong>\n</div>\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}